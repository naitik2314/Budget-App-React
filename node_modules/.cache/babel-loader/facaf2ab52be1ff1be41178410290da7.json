{"ast":null,"code":"var _jsxFileName = \"/home/naitik/Downloads/git-clones/Budget-App-React/src/components/BudgetCard.js\";\nimport { Button, Card, ProgressBar, Stack } from \"react-bootstrap\";\nimport { currencyFormatter } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BudgetCard(_ref) {\n  let {\n    name,\n    amount,\n    max,\n    gray,\n    hideButtons,\n    onAddExpenseClick,\n    onViewExpensesClick\n  } = _ref;\n  const classNames = [];\n\n  if (amount > max) {\n    classNames.push(\"bg-danger\", \"bg-opacity-10\");\n  } else if (gray) {\n    classNames.push(\"bg-light\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classNames.join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"d-flex justify-content-between align-items-baseline fw-normal mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me-2\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-baseline\",\n          children: [currencyFormatter.format(amount), max && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted fs-6 ms-1\",\n            children: [\"/ \", currencyFormatter.format(max)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), max && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        className: \"rounded-pill\",\n        variant: getProgressBarVariant(amount, max),\n        min: 0,\n        max: max,\n        now: amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), !hideButtons && /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"horizontal\",\n        gap: \"2\",\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          className: \"ms-auto\",\n          onClick: onAddExpenseClick,\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onViewExpensesClick,\n          variant: \"outline-secondary\",\n          children: \"View Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = BudgetCard;\n\nfunction getProgressBarVariant(amount, max) {\n  const ratio = amount / max;\n  if (ratio < 0.5) return \"primary\";\n  if (ratio < 0.75) return \"warning\";\n  return \"danger\";\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetCard\");","map":{"version":3,"sources":["/home/naitik/Downloads/git-clones/Budget-App-React/src/components/BudgetCard.js"],"names":["Button","Card","ProgressBar","Stack","currencyFormatter","BudgetCard","name","amount","max","gray","hideButtons","onAddExpenseClick","onViewExpensesClick","classNames","push","join","format","getProgressBarVariant","ratio"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,KAApC,QAAiD,iBAAjD;AACA,SAASC,iBAAT,QAAkC,UAAlC;;AAEA,eAAe,SAASC,UAAT,OAQZ;AAAA,MARgC;AACjCC,IAAAA,IADiC;AAEjCC,IAAAA,MAFiC;AAGjCC,IAAAA,GAHiC;AAIjCC,IAAAA,IAJiC;AAKjCC,IAAAA,WALiC;AAMjCC,IAAAA,iBANiC;AAOjCC,IAAAA;AAPiC,GAQhC;AACD,QAAMC,UAAU,GAAG,EAAnB;;AACA,MAAIN,MAAM,GAAGC,GAAb,EAAkB;AAChBK,IAAAA,UAAU,CAACC,IAAX,CAAgB,WAAhB,EAA6B,eAA7B;AACD,GAFD,MAEO,IAAIL,IAAJ,EAAU;AACfI,IAAAA,UAAU,CAACC,IAAX,CAAgB,UAAhB;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAED,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAAjB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,oEAAtB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBT;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,qBACGF,iBAAiB,CAACY,MAAlB,CAAyBT,MAAzB,CADH,EAEGC,GAAG,iBACF;AAAM,YAAA,SAAS,EAAC,sBAAhB;AAAA,6BACKJ,iBAAiB,CAACY,MAAlB,CAAyBR,GAAzB,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAYGA,GAAG,iBACF,QAAC,WAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,OAAO,EAAES,qBAAqB,CAACV,MAAD,EAASC,GAAT,CAFhC;AAGE,QAAA,GAAG,EAAE,CAHP;AAIE,QAAA,GAAG,EAAEA,GAJP;AAKE,QAAA,GAAG,EAAED;AALP;AAAA;AAAA;AAAA;AAAA,cAbJ,EAqBG,CAACG,WAAD,iBACC,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAC,GAAlC;AAAsC,QAAA,SAAS,EAAC,MAAhD;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,iBADV;AAEE,UAAA,SAAS,EAAC,SAFZ;AAGE,UAAA,OAAO,EAAEC,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,mBAAjB;AAAsC,UAAA,OAAO,EAAC,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;KAxDuBP,U;;AA0DxB,SAASY,qBAAT,CAA+BV,MAA/B,EAAuCC,GAAvC,EAA4C;AAC1C,QAAMU,KAAK,GAAGX,MAAM,GAAGC,GAAvB;AACA,MAAIU,KAAK,GAAG,GAAZ,EAAiB,OAAO,SAAP;AACjB,MAAIA,KAAK,GAAG,IAAZ,EAAkB,OAAO,SAAP;AAClB,SAAO,QAAP;AACD","sourcesContent":["import { Button, Card, ProgressBar, Stack } from \"react-bootstrap\"\nimport { currencyFormatter } from \"../utils\"\n\nexport default function BudgetCard({\n  name,\n  amount,\n  max,\n  gray,\n  hideButtons,\n  onAddExpenseClick,\n  onViewExpensesClick,\n}) {\n  const classNames = []\n  if (amount > max) {\n    classNames.push(\"bg-danger\", \"bg-opacity-10\")\n  } else if (gray) {\n    classNames.push(\"bg-light\")\n  }\n\n  return (\n    <Card className={classNames.join(\" \")}>\n      <Card.Body>\n        <Card.Title className=\"d-flex justify-content-between align-items-baseline fw-normal mb-3\">\n          <div className=\"me-2\">{name}</div>\n          <div className=\"d-flex align-items-baseline\">\n            {currencyFormatter.format(amount)}\n            {max && (\n              <span className=\"text-muted fs-6 ms-1\">\n                / {currencyFormatter.format(max)}\n              </span>\n            )}\n          </div>\n        </Card.Title>\n        {max && (\n          <ProgressBar\n            className=\"rounded-pill\"\n            variant={getProgressBarVariant(amount, max)}\n            min={0}\n            max={max}\n            now={amount}\n          />\n        )}\n        {!hideButtons && (\n          <Stack direction=\"horizontal\" gap=\"2\" className=\"mt-4\">\n            <Button\n              variant=\"outline-primary\"\n              className=\"ms-auto\"\n              onClick={onAddExpenseClick}\n            >\n              Add Expense\n            </Button>\n            <Button onClick={onViewExpensesClick} variant=\"outline-secondary\">\n              View Expenses\n            </Button>\n          </Stack>\n        )}\n      </Card.Body>\n    </Card>\n  )\n}\n\nfunction getProgressBarVariant(amount, max) {\n  const ratio = amount / max\n  if (ratio < 0.5) return \"primary\"\n  if (ratio < 0.75) return \"warning\"\n  return \"danger\"\n}\n"]},"metadata":{},"sourceType":"module"}